[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "opnsense-mcp"
version = "1.0.0"
description = "OPNsense MCP Server for network and firewall management"
requires-python = ">=3.12,<3.13"

[tool.setuptools]
packages = ["opnsense_mcp"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "N",    # pep8-naming
    "C4",   # flake8-comprehensions
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TRY",  # flake8-try-except-raise
    "PERF", # perflint
]
ignore = [
    "T20",   # Allow print statements
    "G004",  # Allow f-string in logging (will be gradually fixed)
    "TRY003", # Allow long messages in exception classes
    "ERA001", # Don't remove commented code automatically
    "E501",  # Allow long lines (will be gradually fixed)
    "W291",  # Allow trailing whitespace (will be gradually fixed)
    "W293",  # Allow blank lines with whitespace (will be gradually fixed)
    "F401",  # Allow unused imports (will be gradually fixed)
    "F841",  # Allow unused variables (will be gradually fixed)
    "TRY300", # Allow try/except patterns (will be gradually fixed)
    "TRY301", # Allow raise in try blocks (will be gradually fixed)
    "SLF001", # Allow private member access (will be gradually fixed)
    "PERF401", # Allow list.append in loops (will be gradually fixed)
    "PERF403", # Allow dict updates in loops (will be gradually fixed)
    "PTH100", # Allow os.path functions (will be gradually fixed)
    "PTH110", # Allow os.path functions (will be gradually fixed)
    "PTH111", # Allow os.path functions (will be gradually fixed)
    "PTH118", # Allow os.path functions (will be gradually fixed)
    "PTH120", # Allow os.path functions (will be gradually fixed)
    "PTH123", # Allow os.path functions (will be gradually fixed)
    "SIM102", # Allow nested if statements (will be gradually fixed)
    "SIM105", # Allow try/except/pass (will be gradually fixed)
    "ARG001", # Allow unused function arguments (will be gradually fixed)
    "ARG002", # Allow unused method arguments (will be gradually fixed)
    "F601", # Allow repeated dictionary keys (will be gradually fixed)
    "RET503", # Allow missing explicit return (will be gradually fixed)
    "E402", # Allow imports not at top (will be gradually fixed)
    "G201", # Allow logging.error with exc_info (will be gradually fixed)
    "TRY400", # Allow logging.error instead of exception (will be gradually fixed)
]

[tool.ruff.lint.per-file-ignores]
# Test files can have longer lines and more flexible rules
"tests/*" = ["E501", "ARG", "SLF001", "F401", "F841"]
# Example files can skip argument annotations
"examples/*" = ["E501", "F401", "F841"]
# Test files anywhere can skip argument annotations
"test_*.py" = ["E501", "F401", "F841"]
# Main tools can have some flexibility during development
"opnsense_mcp/tools/*" = ["E501", "F401", "F841"]
"opnsense_mcp/utils/*" = ["E501", "F401", "F841"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces around keywords
indent-style = "space"
# Respect magic trailing commas
skip-magic-trailing-comma = false
# Auto-detect line endings
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
